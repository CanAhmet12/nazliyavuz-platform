name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nazliyavuz_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, pdo, pdo_mysql, bcmath, gd, zip, redis
        coverage: xdebug
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Backend Dependencies
      run: |
        cd backend
        composer install --no-progress --prefer-dist --optimize-autoloader
    
    - name: Install Frontend Dependencies
      run: |
        cd frontend/nazliyavuz_app
        npm install
    
    - name: Setup Environment
      run: |
        cd backend
        cp .env.example .env
        php artisan key:generate
        php artisan config:cache
    
    - name: Run Database Migrations
      run: |
        cd backend
        php artisan migrate --force
    
    - name: Run Backend Tests
      run: |
        cd backend
        php artisan test --coverage
    
    - name: Run Frontend Tests
      run: |
        cd frontend/nazliyavuz_app
        npm test
    
    - name: Build Frontend
      run: |
        cd frontend/nazliyavuz_app
        npm run build
    
    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        file: backend/coverage.xml

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Security Audit
      run: |
        cd backend
        composer audit
        npm audit --audit-level moderate

  deploy:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Production
      run: |
        echo "Deploying to production..."
        # Add deployment commands here
